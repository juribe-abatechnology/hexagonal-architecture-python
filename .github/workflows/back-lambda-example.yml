name: Lambda example node.js

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "back/lambda/example"

defaults:
  run:
    working-directory: back/lambda/example

env:
  STACK_NAME: lambda-example
  STACK_CONFIG_LAMBDA: lambda
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  LAMBDA_NAME: abatech
  LAMBDA_DESCRIPTION: "example of serverless"
  SERVICE_ROLE: "lambda.amazonaws.com"
  ENTRY_PATH: "../../back/lambda/example/handler.js"
  DEPS_LOCK_FILE_PATH: "../../back/lambda/example/package-lock.json"
  ARN_DYNAMODB: "arn:aws:dynamodb:us-east-1:408058604061:table/payment"
  ACTION_DYNAMODB: "dynamodb:*"
  SECRET_MANAGER: ${{ secrets.SECRET_MANAGER }}
  ARN_RDS: ${{ secrets.ARN_RDS  }}
  AWS_SDK: nodejs

jobs:
  dev:
    name: Dev Environment example nodejs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials from dev account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CLOUD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_CLOUD }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_NONPROD }}
          aws-region: us-east-1

      - name: Install dependencies on our lambda
        run: |
          npm install
      
      - name: Install dependencies on the infra aws cdk
        working-directory: infra/
        run: |
          sudo npm install -g aws-cdk
          sudo npm i -g esbuild
          npm install
        
      - name: Deploy AWS Lambda
        working-directory: infra/
        run: |
          STACK_NAME=${{ env.STACK_NAME }}
          STACK_CONFIG_LAMBDA=${{ env.STACK_CONFIG_LAMBDA }}
          AWS_REGION=${{ env.AWS_REGION }}
          AWS_ACCOUNT_ID=${{ env.AWS_ACCOUNT_ID }}
          LAMBDA_NAME=${{ env.LAMBDA_NAME }}
          SECRET_MANAGER=${{ env.SECRET_MANAGER }}
          ARN_RDS=${{ env.ARN_RDS  }}
          AWS_SDK=${{ env.AWS_SDK }}
          SERVICE_ROLE=${{ env.SERVICE_ROLE }}
          ENTRY_PATH=${{ env.ENTRY_PATH }}
          DEPS_LOCK_FILE_PATH=${{ env.DEPS_LOCK_FILE_PATH }}
          ARN_DYNAMODB=${{ env.ARN_DYNAMODB }}
          ACTION_DYNAMODB=${{ env.ACTION_DYNAMODB }}
          cdk deploy ${{ env.STACK_NAME }} -c config=${{ env.STACK_CONFIG_LAMBDA }} --require-approval never
